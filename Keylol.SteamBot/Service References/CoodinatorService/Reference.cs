//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Keylol.SteamBot.CoodinatorService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SteamBotDTO", Namespace="http://schemas.datacontract.org/2004/07/Keylol.Models.DTO")]
    [System.SerializableAttribute()]
    public partial class SteamBotDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SteamPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SteamUserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SteamPassword {
            get {
                return this.SteamPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.SteamPasswordField, value) != true)) {
                    this.SteamPasswordField = value;
                    this.RaisePropertyChanged("SteamPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SteamUserName {
            get {
                return this.SteamUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SteamUserNameField, value) != true)) {
                    this.SteamUserNameField = value;
                    this.RaisePropertyChanged("SteamUserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SteamBotVM", Namespace="http://schemas.datacontract.org/2004/07/Keylol.Models.ViewModels")]
    [System.SerializableAttribute()]
    public partial class SteamBotVM : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FriendCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> OnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SteamIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FriendCount {
            get {
                return this.FriendCountField;
            }
            set {
                if ((this.FriendCountField.Equals(value) != true)) {
                    this.FriendCountField = value;
                    this.RaisePropertyChanged("FriendCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Online {
            get {
                return this.OnlineField;
            }
            set {
                if ((this.OnlineField.Equals(value) != true)) {
                    this.OnlineField = value;
                    this.RaisePropertyChanged("Online");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SteamId {
            get {
                return this.SteamIdField;
            }
            set {
                if ((this.SteamIdField.Equals(value) != true)) {
                    this.SteamIdField = value;
                    this.RaisePropertyChanged("SteamId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDTO", Namespace="http://schemas.datacontract.org/2004/07/Keylol.Models.DTO")]
    [System.SerializableAttribute()]
    public partial class UserDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoShareOnAcquiringNewGameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoShareOnAddingFavoriteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoShareOnAddingNewFriendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoShareOnAddingVideoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoShareOnCreatingGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoShareOnJoiningGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoShareOnPublishingReviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoShareOnUnlockingAchievementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoShareOnUpdatingWishlistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoShareOnUploadingScreenshotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvatarImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailNotifyOnAdvertisementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailNotifyOnArticleRepliedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailNotifyOnCommentRepliedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailNotifyOnEditorRecommendedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailNotifyOnMessageReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GamerTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockoutEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Keylol.SteamBot.CoodinatorService.LoginLogDTO LoginLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MessageNotifyOnArticleLikedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MessageNotifyOnArticleRepliedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MessageNotifyOnCommentLikedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MessageNotifyOnCommentRepliedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MessageNotifyOnEditorRecommendedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfilePointBackgroundImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StaffClaimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Keylol.SteamBot.CoodinatorService.SteamBotDTO SteamBotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SteamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoShareOnAcquiringNewGame {
            get {
                return this.AutoShareOnAcquiringNewGameField;
            }
            set {
                if ((this.AutoShareOnAcquiringNewGameField.Equals(value) != true)) {
                    this.AutoShareOnAcquiringNewGameField = value;
                    this.RaisePropertyChanged("AutoShareOnAcquiringNewGame");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoShareOnAddingFavorite {
            get {
                return this.AutoShareOnAddingFavoriteField;
            }
            set {
                if ((this.AutoShareOnAddingFavoriteField.Equals(value) != true)) {
                    this.AutoShareOnAddingFavoriteField = value;
                    this.RaisePropertyChanged("AutoShareOnAddingFavorite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoShareOnAddingNewFriend {
            get {
                return this.AutoShareOnAddingNewFriendField;
            }
            set {
                if ((this.AutoShareOnAddingNewFriendField.Equals(value) != true)) {
                    this.AutoShareOnAddingNewFriendField = value;
                    this.RaisePropertyChanged("AutoShareOnAddingNewFriend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoShareOnAddingVideo {
            get {
                return this.AutoShareOnAddingVideoField;
            }
            set {
                if ((this.AutoShareOnAddingVideoField.Equals(value) != true)) {
                    this.AutoShareOnAddingVideoField = value;
                    this.RaisePropertyChanged("AutoShareOnAddingVideo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoShareOnCreatingGroup {
            get {
                return this.AutoShareOnCreatingGroupField;
            }
            set {
                if ((this.AutoShareOnCreatingGroupField.Equals(value) != true)) {
                    this.AutoShareOnCreatingGroupField = value;
                    this.RaisePropertyChanged("AutoShareOnCreatingGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoShareOnJoiningGroup {
            get {
                return this.AutoShareOnJoiningGroupField;
            }
            set {
                if ((this.AutoShareOnJoiningGroupField.Equals(value) != true)) {
                    this.AutoShareOnJoiningGroupField = value;
                    this.RaisePropertyChanged("AutoShareOnJoiningGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoShareOnPublishingReview {
            get {
                return this.AutoShareOnPublishingReviewField;
            }
            set {
                if ((this.AutoShareOnPublishingReviewField.Equals(value) != true)) {
                    this.AutoShareOnPublishingReviewField = value;
                    this.RaisePropertyChanged("AutoShareOnPublishingReview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoShareOnUnlockingAchievement {
            get {
                return this.AutoShareOnUnlockingAchievementField;
            }
            set {
                if ((this.AutoShareOnUnlockingAchievementField.Equals(value) != true)) {
                    this.AutoShareOnUnlockingAchievementField = value;
                    this.RaisePropertyChanged("AutoShareOnUnlockingAchievement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoShareOnUpdatingWishlist {
            get {
                return this.AutoShareOnUpdatingWishlistField;
            }
            set {
                if ((this.AutoShareOnUpdatingWishlistField.Equals(value) != true)) {
                    this.AutoShareOnUpdatingWishlistField = value;
                    this.RaisePropertyChanged("AutoShareOnUpdatingWishlist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoShareOnUploadingScreenshot {
            get {
                return this.AutoShareOnUploadingScreenshotField;
            }
            set {
                if ((this.AutoShareOnUploadingScreenshotField.Equals(value) != true)) {
                    this.AutoShareOnUploadingScreenshotField = value;
                    this.RaisePropertyChanged("AutoShareOnUploadingScreenshot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvatarImage {
            get {
                return this.AvatarImageField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarImageField, value) != true)) {
                    this.AvatarImageField = value;
                    this.RaisePropertyChanged("AvatarImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailNotifyOnAdvertisement {
            get {
                return this.EmailNotifyOnAdvertisementField;
            }
            set {
                if ((this.EmailNotifyOnAdvertisementField.Equals(value) != true)) {
                    this.EmailNotifyOnAdvertisementField = value;
                    this.RaisePropertyChanged("EmailNotifyOnAdvertisement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailNotifyOnArticleReplied {
            get {
                return this.EmailNotifyOnArticleRepliedField;
            }
            set {
                if ((this.EmailNotifyOnArticleRepliedField.Equals(value) != true)) {
                    this.EmailNotifyOnArticleRepliedField = value;
                    this.RaisePropertyChanged("EmailNotifyOnArticleReplied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailNotifyOnCommentReplied {
            get {
                return this.EmailNotifyOnCommentRepliedField;
            }
            set {
                if ((this.EmailNotifyOnCommentRepliedField.Equals(value) != true)) {
                    this.EmailNotifyOnCommentRepliedField = value;
                    this.RaisePropertyChanged("EmailNotifyOnCommentReplied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailNotifyOnEditorRecommended {
            get {
                return this.EmailNotifyOnEditorRecommendedField;
            }
            set {
                if ((this.EmailNotifyOnEditorRecommendedField.Equals(value) != true)) {
                    this.EmailNotifyOnEditorRecommendedField = value;
                    this.RaisePropertyChanged("EmailNotifyOnEditorRecommended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailNotifyOnMessageReceived {
            get {
                return this.EmailNotifyOnMessageReceivedField;
            }
            set {
                if ((this.EmailNotifyOnMessageReceivedField.Equals(value) != true)) {
                    this.EmailNotifyOnMessageReceivedField = value;
                    this.RaisePropertyChanged("EmailNotifyOnMessageReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GamerTag {
            get {
                return this.GamerTagField;
            }
            set {
                if ((object.ReferenceEquals(this.GamerTagField, value) != true)) {
                    this.GamerTagField = value;
                    this.RaisePropertyChanged("GamerTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdCode {
            get {
                return this.IdCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IdCodeField, value) != true)) {
                    this.IdCodeField = value;
                    this.RaisePropertyChanged("IdCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockoutEnabled {
            get {
                return this.LockoutEnabledField;
            }
            set {
                if ((this.LockoutEnabledField.Equals(value) != true)) {
                    this.LockoutEnabledField = value;
                    this.RaisePropertyChanged("LockoutEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Keylol.SteamBot.CoodinatorService.LoginLogDTO LoginLog {
            get {
                return this.LoginLogField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginLogField, value) != true)) {
                    this.LoginLogField = value;
                    this.RaisePropertyChanged("LoginLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MessageNotifyOnArticleLiked {
            get {
                return this.MessageNotifyOnArticleLikedField;
            }
            set {
                if ((this.MessageNotifyOnArticleLikedField.Equals(value) != true)) {
                    this.MessageNotifyOnArticleLikedField = value;
                    this.RaisePropertyChanged("MessageNotifyOnArticleLiked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MessageNotifyOnArticleReplied {
            get {
                return this.MessageNotifyOnArticleRepliedField;
            }
            set {
                if ((this.MessageNotifyOnArticleRepliedField.Equals(value) != true)) {
                    this.MessageNotifyOnArticleRepliedField = value;
                    this.RaisePropertyChanged("MessageNotifyOnArticleReplied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MessageNotifyOnCommentLiked {
            get {
                return this.MessageNotifyOnCommentLikedField;
            }
            set {
                if ((this.MessageNotifyOnCommentLikedField.Equals(value) != true)) {
                    this.MessageNotifyOnCommentLikedField = value;
                    this.RaisePropertyChanged("MessageNotifyOnCommentLiked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MessageNotifyOnCommentReplied {
            get {
                return this.MessageNotifyOnCommentRepliedField;
            }
            set {
                if ((this.MessageNotifyOnCommentRepliedField.Equals(value) != true)) {
                    this.MessageNotifyOnCommentRepliedField = value;
                    this.RaisePropertyChanged("MessageNotifyOnCommentReplied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MessageNotifyOnEditorRecommended {
            get {
                return this.MessageNotifyOnEditorRecommendedField;
            }
            set {
                if ((this.MessageNotifyOnEditorRecommendedField.Equals(value) != true)) {
                    this.MessageNotifyOnEditorRecommendedField = value;
                    this.RaisePropertyChanged("MessageNotifyOnEditorRecommended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfilePointBackgroundImage {
            get {
                return this.ProfilePointBackgroundImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePointBackgroundImageField, value) != true)) {
                    this.ProfilePointBackgroundImageField = value;
                    this.RaisePropertyChanged("ProfilePointBackgroundImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StaffClaim {
            get {
                return this.StaffClaimField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffClaimField, value) != true)) {
                    this.StaffClaimField = value;
                    this.RaisePropertyChanged("StaffClaim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Keylol.SteamBot.CoodinatorService.SteamBotDTO SteamBot {
            get {
                return this.SteamBotField;
            }
            set {
                if ((object.ReferenceEquals(this.SteamBotField, value) != true)) {
                    this.SteamBotField = value;
                    this.RaisePropertyChanged("SteamBot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SteamId {
            get {
                return this.SteamIdField;
            }
            set {
                if ((this.SteamIdField.Equals(value) != true)) {
                    this.SteamIdField = value;
                    this.RaisePropertyChanged("SteamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginLogDTO", Namespace="http://schemas.datacontract.org/2004/07/Keylol.Models.DTO")]
    [System.SerializableAttribute()]
    public partial class LoginLogDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ip {
            get {
                return this.IpField;
            }
            set {
                if ((object.ReferenceEquals(this.IpField, value) != true)) {
                    this.IpField = value;
                    this.RaisePropertyChanged("Ip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CoodinatorService.ISteamBotCoodinator", CallbackContract=typeof(Keylol.SteamBot.CoodinatorService.ISteamBotCoodinatorCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ISteamBotCoodinator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISteamBotCoodinator/AllocateBots", ReplyAction="http://tempuri.org/ISteamBotCoodinator/AllocateBotsResponse")]
        Keylol.SteamBot.CoodinatorService.SteamBotDTO[] AllocateBots();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISteamBotCoodinator/AllocateBots", ReplyAction="http://tempuri.org/ISteamBotCoodinator/AllocateBotsResponse")]
        System.Threading.Tasks.Task<Keylol.SteamBot.CoodinatorService.SteamBotDTO[]> AllocateBotsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISteamBotCoodinator/UpdateBots", ReplyAction="http://tempuri.org/ISteamBotCoodinator/UpdateBotsResponse")]
        void UpdateBots(Keylol.SteamBot.CoodinatorService.SteamBotVM[] vms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISteamBotCoodinator/UpdateBots", ReplyAction="http://tempuri.org/ISteamBotCoodinator/UpdateBotsResponse")]
        System.Threading.Tasks.Task UpdateBotsAsync(Keylol.SteamBot.CoodinatorService.SteamBotVM[] vms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISteamBotCoodinator/GetUserBySteamId", ReplyAction="http://tempuri.org/ISteamBotCoodinator/GetUserBySteamIdResponse")]
        Keylol.SteamBot.CoodinatorService.UserDTO GetUserBySteamId(long steamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISteamBotCoodinator/GetUserBySteamId", ReplyAction="http://tempuri.org/ISteamBotCoodinator/GetUserBySteamIdResponse")]
        System.Threading.Tasks.Task<Keylol.SteamBot.CoodinatorService.UserDTO> GetUserBySteamIdAsync(long steamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISteamBotCoodinator/BindSteamUserWithBindingToken", ReplyAction="http://tempuri.org/ISteamBotCoodinator/BindSteamUserWithBindingTokenResponse")]
        bool BindSteamUserWithBindingToken(long userSteamId, string code, string botId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISteamBotCoodinator/BindSteamUserWithBindingToken", ReplyAction="http://tempuri.org/ISteamBotCoodinator/BindSteamUserWithBindingTokenResponse")]
        System.Threading.Tasks.Task<bool> BindSteamUserWithBindingTokenAsync(long userSteamId, string code, string botId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISteamBotCoodinator/BindSteamUserWithLoginToken", ReplyAction="http://tempuri.org/ISteamBotCoodinator/BindSteamUserWithLoginTokenResponse")]
        bool BindSteamUserWithLoginToken(long userSteamId, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISteamBotCoodinator/BindSteamUserWithLoginToken", ReplyAction="http://tempuri.org/ISteamBotCoodinator/BindSteamUserWithLoginTokenResponse")]
        System.Threading.Tasks.Task<bool> BindSteamUserWithLoginTokenAsync(long userSteamId, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISteamBotCoodinator/Test", ReplyAction="http://tempuri.org/ISteamBotCoodinator/TestResponse")]
        string Test(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISteamBotCoodinator/Test", ReplyAction="http://tempuri.org/ISteamBotCoodinator/TestResponse")]
        System.Threading.Tasks.Task<string> TestAsync(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISteamBotCoodinatorCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISteamBotCoodinator/DeleteSteamFriend")]
        void DeleteSteamFriend(string botId, long steamId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISteamBotCoodinator/TestCallback")]
        void TestCallback(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISteamBotCoodinatorChannel : Keylol.SteamBot.CoodinatorService.ISteamBotCoodinator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SteamBotCoodinatorClient : System.ServiceModel.DuplexClientBase<Keylol.SteamBot.CoodinatorService.ISteamBotCoodinator>, Keylol.SteamBot.CoodinatorService.ISteamBotCoodinator {
        
        public SteamBotCoodinatorClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SteamBotCoodinatorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SteamBotCoodinatorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SteamBotCoodinatorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SteamBotCoodinatorClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public Keylol.SteamBot.CoodinatorService.SteamBotDTO[] AllocateBots() {
            return base.Channel.AllocateBots();
        }
        
        public System.Threading.Tasks.Task<Keylol.SteamBot.CoodinatorService.SteamBotDTO[]> AllocateBotsAsync() {
            return base.Channel.AllocateBotsAsync();
        }
        
        public void UpdateBots(Keylol.SteamBot.CoodinatorService.SteamBotVM[] vms) {
            base.Channel.UpdateBots(vms);
        }
        
        public System.Threading.Tasks.Task UpdateBotsAsync(Keylol.SteamBot.CoodinatorService.SteamBotVM[] vms) {
            return base.Channel.UpdateBotsAsync(vms);
        }
        
        public Keylol.SteamBot.CoodinatorService.UserDTO GetUserBySteamId(long steamId) {
            return base.Channel.GetUserBySteamId(steamId);
        }
        
        public System.Threading.Tasks.Task<Keylol.SteamBot.CoodinatorService.UserDTO> GetUserBySteamIdAsync(long steamId) {
            return base.Channel.GetUserBySteamIdAsync(steamId);
        }
        
        public bool BindSteamUserWithBindingToken(long userSteamId, string code, string botId) {
            return base.Channel.BindSteamUserWithBindingToken(userSteamId, code, botId);
        }
        
        public System.Threading.Tasks.Task<bool> BindSteamUserWithBindingTokenAsync(long userSteamId, string code, string botId) {
            return base.Channel.BindSteamUserWithBindingTokenAsync(userSteamId, code, botId);
        }
        
        public bool BindSteamUserWithLoginToken(long userSteamId, string code) {
            return base.Channel.BindSteamUserWithLoginToken(userSteamId, code);
        }
        
        public System.Threading.Tasks.Task<bool> BindSteamUserWithLoginTokenAsync(long userSteamId, string code) {
            return base.Channel.BindSteamUserWithLoginTokenAsync(userSteamId, code);
        }
        
        public string Test(string message) {
            return base.Channel.Test(message);
        }
        
        public System.Threading.Tasks.Task<string> TestAsync(string message) {
            return base.Channel.TestAsync(message);
        }
    }
}
